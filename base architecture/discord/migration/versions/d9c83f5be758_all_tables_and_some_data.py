"""all tables and some data

Revision ID: d9c83f5be758
Revises: 1736618b7eb8
Create Date: 2024-04-05 09:27:43.465378

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session

from app import User
from migration.seed_data import seed_data

# revision identifiers, used by Alembic.
revision: str = 'd9c83f5be758'
down_revision: Union[str, None] = '1736618b7eb8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bans',
    sa.Column('ban_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('banned_user_id', sa.Integer(), nullable=False),
    sa.Column('banned_by_user_id', sa.Integer(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['banned_by_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['banned_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('ban_id')
    )
    op.create_table('channels',
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('channel_name', sa.String(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.Column('channel_type', sa.Enum('text_channel', 'voice_channel', name='ChannelType'), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('channel_id')
    )
    op.create_table('emojis',
    sa.Column('emoji_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('emoji_name', sa.String(), nullable=False),
    sa.Column('emoji_image', sa.String(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('emoji_id')
    )
    op.create_table('invitations',
    sa.Column('invitation_id', sa.Integer(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=True),
    sa.Column('invited_user_id', sa.Integer(), nullable=False),
    sa.Column('invitation_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invited_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('invitation_id')
    )
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message_content', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('permissions',
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('can_send_messages', sa.Boolean(), nullable=True),
    sa.Column('can_delete_messages', sa.Boolean(), nullable=True),
    sa.Column('can_edit_messages', sa.Boolean(), nullable=True),
    sa.Column('can_create_roles', sa.Boolean(), nullable=True),
    sa.Column('can_ban_users', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.channel_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('permission_id')
    )
    op.create_table('user_roles',
    sa.Column('user_role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('server_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['server_id'], ['servers.server_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_role_id')
                    )
    op.bulk_insert(User, [
        {
            "id": 1,
            "username": "user",
            "email": "email",
            "password_hash": '1343',
            "online_status": False,
            "registration_date": datetime.timestamp()
        },
    ],
                   )
    op.execute('insert into users (user_id, username, email, password_hash, online_status, registration_date) values ("user", "EMAIL", "PASSWORD", True, current_timestamp)')
    session = Session(bind=op.get_bind())
    user = User(user_id=str(0), email="<EMAIL>", username="user" + str(0), password_hash="<PASSWORD>",
                    online_status=True, registration_date=str(1111))
    session.add(user)
    session.commit()
    seed_data(session)
    op.execute(open('../seed_data.py'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_table('permissions')
    op.drop_table('messages')
    op.drop_table('roles')
    op.drop_table('invitations')
    op.drop_table('emojis')
    op.drop_table('channels')
    op.drop_table('bans')
    # ### end Alembic commands ###
